import{d as c,t as p,s as q,m as f,l as h,f as l,a as e,w as y,g as F}from"./index-8b02ec3e.js";let t=null,w=null,o=null;const u=`ws://${location.host}/data`;async function D(){w=F(),o=null,t=new WebSocket(u),t.binaryType="arraybuffer",c.value=u;let n=0,i=0;t.addEventListener("open",()=>{n=Date.now(),t.send(JSON.stringify({type:"init"}))}),t.addEventListener("error",()=>o=`Connect to ${u} failed.`),t.addEventListener("close",()=>o=`Stream ${u} closed.`),t.addEventListener("message",({data:s})=>{if(s instanceof ArrayBuffer){p.value+=s.byteLength;const a=(s.byteLength-16-4)/2,v=new DataView(s),r=Math.max(0,v.getFloat64(a*2));q(r);const d=new Float32Array(s,0,a/4),g=new Float32Array(s,a,a/4);n>0&&Date.now()-n>1e3&&w.play(d,g,r,f.value==="FM"?.15:r/10),h.value=Date.now()-v.getFloat64(a*2+8)+i;const m=v.getUint32(a*2+16);l.value+e.value===m&&(r>.5&&e.value!==0?(l.value=l.value+e.value,e.value=0):e.value>0?e.value<3e5?e.value+=1e5:(l.value=l.value+e.value,e.value=1e5):e.value<0&&(e.value>-3e5?e.value-=1e5:(l.value=l.value+e.value,e.value=-1e5)))}else{const a=JSON.parse(s);i=Math.round(a.ts-(n+Date.now())/2+(Date.now()-n)/2),c.value=`${u} ${(Date.now()-n)/2}ms`,f.value=a.mode,l.value=a.frequency,e.value=a.tuningFreq}})}async function L(){const n=t;t=null,c.value="",await new Promise(i=>setTimeout(i,100)),n&&n.close()}async function O(){for(;t;)if(await new Promise(n=>setTimeout(n,100)),o)throw o}y(l,()=>{t.send(JSON.stringify({type:"frequency",frequency:l.value,tuningFreq:e.value}))});y(e,()=>{t.send(JSON.stringify({type:"frequency",frequency:l.value,tuningFreq:e.value}))});y(f,n=>{t.send(JSON.stringify({type:"mode",mode:n}))});export{D as connect,L as disconnect,O as receive};
