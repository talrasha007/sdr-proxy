import{d as F,t as E,s as W,m,l as N,f as i,a as e,w as p}from"./index-81716f2a.js";function O(){var l=48e3,f=0,r=.3,n=-1,u=-2,t=null,s=new(window.AudioContext||window.webkitAudioContext),c=s.createGain?s.createGain():s.createGainNode();c.connect(s.destination);function d(o,q,A,D){var w=s.createBuffer(2,o.length,l);A>=D?u=null:u===null&&(u=n),(u===null||n-u<r)&&(w.getChannelData(0).set(o),w.getChannelData(1).set(q),t!=null&&t.writeSamples(o,q));var g=s.createBufferSource();g.buffer=w,g.connect(c),n=Math.max(n+o.length/l,s.currentTime+f),g.start(n)}function L(o){t&&t.finish(),t=new WavSaver(o)}function S(){t&&(t.finish(),t=null)}function T(){return t&&t.hasFinished()&&(t=null),t!=null}function b(o){c.gain.value=o}return{play:d,setVolume:b,startWriting:L,stopWriting:S,isWriting:T}}let a=null,h=null,v=null;const y=`ws://${location.host}/data`;async function J(){v=null,h=h||new O,a=new WebSocket(y),a.binaryType="arraybuffer",F.value=y;let l=0,f=0;a.addEventListener("open",()=>{l=Date.now(),a.send(JSON.stringify({type:"init"}))}),a.addEventListener("error",()=>v=`Connect to ${y} failed.`),a.addEventListener("close",()=>v=`Stream ${y} closed.`),a.addEventListener("message",({data:r})=>{if(r instanceof ArrayBuffer){E.value+=r.byteLength;const n=(r.byteLength-16-4)/2,u=new DataView(r),t=u.getFloat64(n*2);W(t);const s=new Float32Array(r,0,n/4),c=new Float32Array(r,n,n/4);Date.now()-l>1e3&&h.play(s,c,t,m.value==="FM"?.15:t/10),N.value=Date.now()-u.getFloat64(n*2+8)+f;const d=u.getUint32(n*2+16);i.value+e.value===d&&(t>.5&&e.value!==0?(i.value=i.value+e.value,e.value=0):e.value>0?e.value<3e5?e.value+=1e5:(i.value=i.value+e.value,e.value=1e5):e.value<0&&(e.value>-3e5?e.value-=1e5:(i.value=i.value+e.value,e.value=-1e5)))}else{const n=JSON.parse(r);f=Math.round(n.ts-(l+Date.now())/2+(Date.now()-l)/2),m.value=n.mode,i.value=n.frequency,e.value=n.tuningFreq}})}async function x(){a.close(),a=null,F.value=""}async function B(){for(;a;)if(await new Promise(l=>setTimeout(l,100)),v)throw v}p(i,()=>{a.send(JSON.stringify({type:"frequency",frequency:i.value,tuningFreq:e.value}))});p(e,()=>{a.send(JSON.stringify({type:"frequency",frequency:i.value,tuningFreq:e.value}))});p(m,l=>{a.send(JSON.stringify({type:"mode",mode:l}))});export{J as connect,x as disconnect,B as receive};
